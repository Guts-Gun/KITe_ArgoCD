apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: user-source
  namespace: kafka
  labels:
    strimzi.io/cluster: kafka-connect-cluster3
spec:
  class: io.debezium.connector.mysql.MySqlConnector
  config:
    database.hostname: user-service.db.svc.cluster.local
    database.port: 3306
    database.user: root
    database.password: gutsandgun
    database.server.id: 184054
    database.server.name: db
    topic.prefix: write
    database.include.list: user
    snapshot.mode: schema_only_recovery
    # table.whitelist: user
    topic.creation.default.partitions: 3
    topic.creation.default.replication.factor: 3
    database.allowPublicKeyRetrieval: true
    database.history.kafka.bootstrap.servers: kafka-cluster-kafka-bootstrap:9092
    database.history.kafka.topic: dbhistory.user
    schema.history.internal.kafka.bootstrap.servers: kafka-cluster-kafka-bootstrap:9092
    schema.history.internal.kafka.topic: schema-changes.user
    include.schema.changes: true
    key.converter: org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable: true
    value.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable: true

    # transforms: unwrap,addTopicPrefix,route
    # transforms.unwrap.type: io.debezium.transforms.ExtractNewRecordState
    # transforms.unwrap.drop.tombstones: false
    # transforms.unwrap.delete.handling.mode: rewrite
    # transforms.unwrap.add.fields: op,schema

    transforms: unwrap,addTopicPrefix
    transforms.unwrap.type: io.debezium.transforms.ExtractNewRecordState
    transforms.unwrap.drop.tombstones: false
    transforms.addTopicPrefix.type: org.apache.kafka.connect.transforms.RegexRouter
    transforms.addTopicPrefix.regex: "(.*)"
    transforms.addTopicPrefix.replacement: $1