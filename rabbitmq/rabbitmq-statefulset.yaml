apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: rabbit
  name: rabbitmq
spec:
  replicas: 3
  serviceName: rabbitmq
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.6.6-management-alpine
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "gutsandgun"
        - name: RABBITMQ_DEFAULT_PASS
          value: "gutsandgun"
        #- name: RABBITMQ_ERLANG_COOKIE
        #  value: "1WqgH8N2v1qDBDZDbNy8Bg9IkPWLEpu79m6q+0t36lQ="
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          mkdir -p /rabbitmq-vol
          mkdir -p /rabbitmq-vol/$ordinal
          mkdir -p /rabbitmq-vol/$ordinal/rabbitmq
          mkdir -p /rabbitmq-vol/$ordinal/rabbitmq/mnesia
          if [[ $ordinal -eq 0 ]]; then
            sed -i 's@MNESIA_BASE=${SYS_PREFIX}/var/lib/rabbitmq/mnesia@MNESIA_BASE=${SYS_PREFIX}/rabbitmq-vol/0/rabbitmq/mnesia@g' /opt/rabbitmq/sbin/rabbitmq-defaults
          fi
          if [[ $ordinal -eq 1 ]]; then
            sed -i 's@MNESIA_BASE=${SYS_PREFIX}/var/lib/rabbitmq/mnesia@MNESIA_BASE=${SYS_PREFIX}/rabbitmq-vol/1/rabbitmq/mnesia@g' /opt/rabbitmq/sbin/rabbitmq-defaults
          fi
          if [[ $ordinal -eq 2 ]]; then
            sed -i 's@MNESIA_BASE=${SYS_PREFIX}/var/lib/rabbitmq/mnesia@MNESIA_BASE=${SYS_PREFIX}/rabbitmq-vol/2/rabbitmq/mnesia@g' /opt/rabbitmq/sbin/rabbitmq-defaults
          fi
          exit 0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - >
                if [ -z "$(grep rabbitmq /etc/resolv.conf)" ]; then
                  sed "s/^search \([^ ]\+\)/search rabbitmq.\1 \1/" /etc/resolv.conf > /etc/resolv.conf.new;
                  cat /etc/resolv.conf.new > /etc/resolv.conf;
                  rm /etc/resolv.conf.new;
                fi;
                
                until rabbitmqctl node_health_check; do sleep 1; done;
                if [[ "$HOSTNAME" != "rabbitmq-0" && -z "$(rabbitmqctl cluster_status | grep rabbitmq-0)" ]]; then
                  rabbitmqctl stop_app;
                  rabbitmqctl join_cluster rabbit@rabbitmq-0;
                  rabbitmqctl start_app;
                fi;
                rabbitmqctl set_policy ha-all "." '{"ha-mode":"exactly","ha-params":3,"ha-sync-mode":"automatic"}'
        volumeMounts:
        - mountPath: /rabbitmq-vol
          name: rabbitmq-data
      volumes:
      - name: rabbitmq-data # same as volumemouts name
        hostPath:
          path: /home/worker/k8s/rabbitmq