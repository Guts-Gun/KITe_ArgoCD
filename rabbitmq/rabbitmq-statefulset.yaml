apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: rabbit
  name: rabbitmq-0
spec:
  replicas: 1
  serviceName: rabbitmq
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "gutsandgun"
        - name: RABBITMQ_DEFAULT_PASS
          value: "gutsandgun"
        #- name: RABBITMQ_ERLANG_COOKIE
        #  value: "1WqgH8N2v1qDBDZDbNy8Bg9IkPWLEpu79m6q+0t36lQ="
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - >
                rm -rf .erlang.cookie
                chown -R rabbitmq:rabbitmq /var/lib/rabbitmq
                rabbitmqctl stop_app;
                rabbitmqctl start_app;
                rabbitmqctl set_policy ha-all "." '{"ha-mode":"all"}'
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
      volumes:
      - name: rabbitmq-data # same as volumemouts name
        hostPath:
          path: /home/worker/k8s/rabbitmq-0
          
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: rabbit
  name: rabbitmq-1
spec:
  replicas: 1
  serviceName: rabbitmq
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      initContainers:
      - name: init-rabbitmq
        image: rabbitmq:3-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "gutsandgun"
        - name: RABBITMQ_DEFAULT_PASS
          value: "gutsandgun"
        #- name: RABBITMQ_ERLANG_COOKIE
        #  value: "1WqgH8N2v1qDBDZDbNy8Bg9IkPWLEpu79m6q+0t36lQ="
        command:
        - bash
        - "-c"
        - |
          set -ex
          until cp -r /rabbit-key/.erlang.cookie /var/lib/rabbitmq/; do sleep 1; done;
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
        - mountPath: /rabbit-key
          name: rabbit-key
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "gutsandgun"
        - name: RABBITMQ_DEFAULT_PASS
          value: "gutsandgun"
        #- name: RABBITMQ_ERLANG_COOKIE
        #  value: "1WqgH8N2v1qDBDZDbNy8Bg9IkPWLEpu79m6q+0t36lQ="
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - >
                chown -R rabbitmq:rabbitmq /var/lib/rabbitmq
                rabbitmqctl stop_app;
                rabbitmqctl join_cluster rabbit@rabbitmq-0-0;
                rabbitmqctl start_app;
                rabbitmqctl set_policy ha-all "." '{"ha-mode":"all"}'
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
      volumes:
      - name: rabbitmq-data # same as volumemouts name
        hostPath:
          path: /home/worker/k8s/rabbitmq-1
      - name: rabbit-key # same as volumemouts name
        hostPath:
          path: /home/worker/k8s/rabbitmq-0
          
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: rabbit
  name: rabbitmq-2
spec:
  replicas: 1
  serviceName: rabbitmq
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      initContainers:
      - name: init-rabbitmq
        image: rabbitmq:3-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "gutsandgun"
        - name: RABBITMQ_DEFAULT_PASS
          value: "gutsandgun"
        #- name: RABBITMQ_ERLANG_COOKIE
        #  value: "1WqgH8N2v1qDBDZDbNy8Bg9IkPWLEpu79m6q+0t36lQ="
        command:
        - bash
        - "-c"
        - |
          set -ex
          until cp -r /rabbit-key/.erlang.cookie /var/lib/rabbitmq/; do sleep 1; done;
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
        - mountPath: /rabbit-key
          name: rabbit-key
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "gutsandgun"
        - name: RABBITMQ_DEFAULT_PASS
          value: "gutsandgun"
        #- name: RABBITMQ_ERLANG_COOKIE
        #  value: "1WqgH8N2v1qDBDZDbNy8Bg9IkPWLEpu79m6q+0t36lQ="
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - >
                chown -R rabbitmq:rabbitmq /var/lib/rabbitmq
                rabbitmqctl stop_app;
                rabbitmqctl join_cluster rabbit@rabbitmq-0-0;
                rabbitmqctl start_app;
                rabbitmqctl set_policy ha-all "." '{"ha-mode":"all"}'
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
      volumes:
      - name: rabbitmq-data # same as volumemouts name
        hostPath:
          path: /home/worker/k8s/rabbitmq-2
      - name: rabbit-key # same as volumemouts name
        hostPath:
          path: /home/worker/k8s/rabbitmq-0