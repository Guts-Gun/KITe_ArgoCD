apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
spec:
  serviceName: kafka-service
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service.kafka.svc.cluster.local:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-service.kafka.svc.cluster.local:9092
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        name: kafka-broker
        ports:
        - containerPort: 9092
        volumeMounts:
        - name: kafka-libs
          mountPath: /opt/kafka_2.13-2.8.1/libs
        volumeMounts:
        - name: kafka-tmp
          mountPath: /kafka_tmp
        command: ["/bin/sh"]
        args: ["-c", "cp -r /opt/kafka_2.13-2.8.1/libs /kafka_tmp && cp -r /kafka_tmp /opt/kafka_2.13-2.8.1/libs"]
          
  volumeClaimTemplates:
  - metadata:
      name: kafka-libs
    spec:
      storageClassName: nfs-storageclass
      accessModes: [ "ReadWriteMany" ] 
      resources:
        requests:
          storage: 1Gi