---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.15.3-debian-kafka-1.0
        command:
        - bash
        - "-c"
        - |
          set -ex
          cp -r /fluentd/etc /temp_fluentd
        env:
        - name: FLUENT_KAFKA_BROKERS
          value: kafka-cluster-kafka-brokers.kafka.svc.cluster.local:9092
        - name: FLUENT_KAFKA_DEFAULT_TOPIC
          value: fluentd-container-logging
        - name: FLUENT_KAFKA_MAX_SEND_RETRIES
          value: "3"
        - name: FLUENT_KAFKA_COMPRESSION_CODEC
          value: "snappy"
        - name: FLUENT_KAFKA_MAX_SEND_LIMIT_BYTES
          value: "4096"
        resources:
          limits:
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: conf2
          mountPath: /temp_fluentd
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: conf2 # same as volumemouts name
        nfs:
          server: 172.30.1.100
          path: /k8s/temp